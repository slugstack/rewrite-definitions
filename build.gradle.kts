/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    java
    `maven-publish`
    signing // todo
    id("nebula.release") version "15.2.0"
}

repositories {
    mavenLocal()
    maven {
        url = uri("https://jcenter.bintray.com/")
    }

    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

dependencies {
    implementation("org.projectlombok:lombok:1.18.18")
    testImplementation("org.junit.jupiter:junit-jupiter:5.7.1")
}

group = "io.slugstack.oss"
// version = "0.0.14-SNAPSHOT"
description = "rewrite-definitions"
java.sourceCompatibility = JavaVersion.VERSION_11

tasks.withType<JavaCompile>() {
    options.encoding = "UTF-8"
}

////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////

// TODO
java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    repositories {
        // maven {
        //     name = "GitHubPackages"
        //     url = uri("https://maven.pkg.github.com/OWNER/REPOSITORY")
        //     credentials {
        //         username = project.findProperty("gpr.user") as String? ?: System.getenv("GITHUB_ACTOR")
        //         password = project.findProperty("gpr.key") as String? ?: System.getenv("GITHUB_TOKEN")
        //     }
        // }

        maven {
            name = "OSSRH"
            val releasesRepo = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            val snapshotsRepo = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = uri(if (version.toString().endsWith("SNAPSHOT")) snapshotsRepo else releasesRepo)
            credentials {
                username = project.findProperty("ossrhUsername") as String? ?: System.getenv("OSSRH_USERNAME")
                password = project.findProperty("ossrhPassword") as String? ?: System.getenv("OSSRH_PASSWORD")
            }
        }
    }

    publications.create<MavenPublication>("maven") {
        from(components["java"])
    }

    // publications {
    //     register("gpr") {
    //         from(components["java"])
    //     }
    // }

}

signing {
    // sign(publishing.publications["mavenJava"])
    sign(publishing.publications["maven"])
}
